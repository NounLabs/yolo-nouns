AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  nouns-websockets-app

  SAM Template for nouns-websockets-app using DynamoDB, Lambdas, and API 
  Gateway to enable real-time voting and settlement for Nouns auctions.

Parameters:
  TableName:
    Type: String
    Default: 'nouns_websocket_connections'
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

  VoteTableName:
    Type: String
    Default: 'nouns_vote_results'
    Description: (Required) The name of the DynamoDB table to store Noun vote results for each possible Noun. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

Resources:

  #----------------------------------------#
  # API Gateway: Websocket & Routes Config
  #----------------------------------------#
  NounsWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: NounsWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref NounsWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref NounsWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref NounsWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref NounsWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref NounsWebSocket
      RouteKey: sendvote
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref NounsWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendVoteFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - SendRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref NounsWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref NounsWebSocket

  #----------------------------------------#
  # DynamoDB: Connections & Voting Tables
  #----------------------------------------#
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "connectionId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "connectionId"
        KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName
  VotingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "nounIdWithBlockHash"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "nounIdWithBlockHash"
        KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref VoteTableName

  #----------------------------------------#
  # Lambda: OnConnect from Websocket
  #----------------------------------------#
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs14.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - NounsWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com

  #----------------------------------------#
  # Lambda: OnDisconnect from Websocket
  #----------------------------------------#
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs14.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - NounsWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  #----------------------------------------#
  # Lambda: SendVote Websocket Handler
  #----------------------------------------#
  EthersDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ethers-js-dependency
      Description: Ethers js depency
      ContentUri: ethers-layer/
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: nodejs14.x
  SendVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sendvote/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs14.x
      Layers:
        - !Ref EthersDepLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          VOTE_TABLE_NAME: !Ref VoteTableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - DynamoDBCrudPolicy:
          TableName: !Ref VoteTableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${NounsWebSocket}/*'
        - Effect: Allow
          Action:
          - 'secretsmanager:GetSecretValue'
          Resource:
          - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:nouns/ExecutorPrivateKey-*'
          - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:nouns/AlchemyKey-*'
  SendVotePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - NounsWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendVoteFunction
      Principal: apigateway.amazonaws.com

#----------------------------------------#
# CloudFormation Outputs
#----------------------------------------#
Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  VotingTableArn:
    Description: "Voting table ARN"
    Value: !GetAtt VotingTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  SendVoteFunctionArn:
    Description: "SendVote function ARN"
    Value: !GetAtt SendVoteFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join [ '', [ 'wss://', !Ref NounsWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]